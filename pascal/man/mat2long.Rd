% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mat2long.R
\name{mat2long}
\alias{mat2long}
\alias{long2mat}
\title{Convert between matrix and long (sparse) format}
\usage{
mat2long(
  m,
  names = c("row", "col", "data"),
  row.names = rownames(m),
  col.names = colnames(m),
  filter = NULL
)

long2mat(d, cols = 1:3, row.names = NULL, col.names = NULL, filter = NULL)
}
\arguments{
\item{m}{matrix}

\item{names}{names of row, column, and data columns in the
resulting \code{data.frame}. Defaults to \code{"row", "col",
"data"}.}

\item{row.names, col.names}{optional vectors with row and column
names. If not provided, row and column names are taken from the
matrix \code{m}.}

\item{filter}{predicate indicating which elements to include
(default = all). For example, one could exclude non-finite
values (\code{NA, NaN, Inf}) by specifying
\code{filter=is.finite}.}

\item{d, cols}{data in long format (typically a
\code{data.frame}). \code{cols} indicates which columns contain
row, column and data.}
}
\value{
Data frame containing long format.
}
\description{
Interconvert data between matrix and long format.
}
\details{
\code{mat2long} converts data in matrix format into a
\code{data.frame} with columns containing the row names, column
names, and the actual data. \code{long2mat} does the reverse. For
both functions, it is possible to apply a predicate to include only
values that satisfy that filter -- all other values are set to
\code{NA}.
}
\examples{
## distances between US states
m <- as.matrix(dist(cbind(state.center$x, state.center$y)))
dimnames(m) <- list(state.abb, state.abb)
m[!lower.tri(m)] <- NA
m <- m[1:10, 1:10]
d <- mat2long(m, filter = is.finite)
d

long2mat(d)
long2mat(d, filter = function(x) x > 30)
}
