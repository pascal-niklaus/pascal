% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snapToGrid.R
\name{snapToGrid}
\alias{snapToGrid}
\title{Snap to grid}
\usage{
snapToGrid(d, theta = 0, sz = 1, which = "points")
}
\arguments{
\item{d}{list with elements x and y}

\item{theta}{initial clockwise rotation (default 0)}

\item{sz}{estimate of grid spacing (default 1)}

\item{which}{specify which results to return. Can be either
"points" or "all".}
}
\value{
list with transformed points (which == "points"), or list
    of transformation parameters, transformation matrix, and points
    (which == "all")
}
\description{
Applies a 2D affine transformation to a set of points (x,y) so that
these are places on an orthogonal grid with unit spacing.
}
\details{
An optimal combination of rotation, translation, and scaling is
determined so that points are places as close as possible to
orthogonal grid points.  The fit criterion are minimized
least-square distances from these grid points.  An initial estimate
of the grid spacing needs to be provided, and this estimate is
adjusted by up to plus or minus 30\% in the fitting process.

The function uses a generalized simulated annealing function from
library \code{GenSA} which is not fast but yields good results.
}
\examples{
# create gridded data with noise
d <- expand.grid(1:4,1:4) + matrix(runif(16, min=-.2, max=.2), ncol=2)
names(d) <- c("x","y")

# rotate, translate, and stretch grid
d <- apply2D(rotate2D(pi/10)\%*\%translate2D(.3,-.1)\%*\%scale2D(1.5,1.5),d)

# re-orient data on grid
d2 <- snapToGrid(d,theta=0,sz=1.4)

# visualize results
par(mfrow=c(1,2))
plot(d$x,d$y,asp=1,main="original")
plot(d2$x,d2$y,asp=1, main="adjusted")
for(i in 0:5) { abline(h=i,col="gray"); abline(v=i, col="gray") }
}
\author{
Pascal Niklaus \email{pascal.niklaus@ieu.uzh.ch}
}
