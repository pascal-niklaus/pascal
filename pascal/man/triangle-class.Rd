% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/triangle.R
\docType{class}
\name{triangle-class}
\alias{triangle-class}
\alias{triangle}
\alias{grow,triangle-method}
\alias{grow,}
\alias{triangle-method}
\alias{grow}
\alias{sides,triangle-method}
\alias{sides,}
\alias{sides}
\alias{angles,triangle-method}
\alias{angles}
\alias{place,triangle-method}
\alias{place,}
\alias{place}
\alias{transform2D,triangle-method}
\alias{transform2D,}
\alias{transform2D}
\alias{circumference,triangle-method}
\alias{circumference,}
\alias{circumference}
\alias{incircle,triangle-method}
\alias{incircle,}
\alias{incircle}
\alias{circumcircle,triangle-method}
\alias{circumcircle,}
\alias{circumcircle}
\alias{area,triangle-method}
\alias{area,}
\alias{area}
\alias{as.data.frame,triangle-method}
\alias{as.data.frame,}
\alias{as.data.frame}
\alias{plot,triangle,missing-method}
\alias{plot,}
\alias{plot}
\title{Triangle Class.}
\usage{
triangle(sides = rep(NA, 3), angles = rep(NA, 3), x = NULL,
  y = NULL, degrees = TRUE, simplify = TRUE)

\S4method{grow}{triangle}(object, margins)

\S4method{sides}{triangle}(object)

\S4method{angles}{triangle}(object)

\S4method{place}{triangle}(object, angle = 0, origin = c(0, 0), ...)

\S4method{transform2D}{triangle}(object, m = identity2D(), ...)

\S4method{circumference}{triangle}(object)

\S4method{incircle}{triangle}(object)

\S4method{circumcircle}{triangle}(object)

\S4method{area}{triangle}(object)

\S4method{as.data.frame}{triangle}(x, row.names = letters[1:3],
  optional = FALSE, ...)

\S4method{plot}{triangle,missing}(x, which = c(1L:3L), add = FALSE,
  ...)
}
\arguments{
\item{sides}{vector with the length of the three sides a, b and c.}

\item{angles}{vector with the three angles alpha, beta, and
gamma. alpha is opposite to a, etc.}

\item{x, y}{coordinates of corners of triangle. If these are
specified, they override any specification of sides and angles.
(exception: \code{x} is a triangle object in case of
\code{as.data.frame} and \code{plot})}

\item{degrees}{logical indicating whether the angles are in
degrees. This setting is remembered and any future angles are
output in degrees, if this flag is true.}

\item{simplify}{logical indicating whether a list instead of a list
of lists should be returned in case there is only a single
solution.}

\item{object}{triangle object}

\item{margins}{margin to add (positive values) or subtract
(negative values). This can be a scalar or a vector or three}

\item{angle}{angle by which triangle is rotated (angle=0 indicates
that side AB is along the positive X axis; the angle is
measured counter-clock wise)}

\item{origin}{coordinate (x,y) by which triangle is shifted. (0,0)
indicates that corner A is at the origin.}

\item{\dots}{additional parameters}

\item{m}{2D affine transformation matrix}

\item{row.names}{row names to add when object is coerced to a data
frame}

\item{optional}{unused}

\item{which}{which parts to plot. 1= triangle, 2=incircle,
3=circumcircle}

\item{add}{logical indicating whether the elements should be added
to an existing plot}
}
\value{
A list of triangle objects (none, one or two), or a single
    triangle object in case of \code{simplify=TRUE} and a unique
    solution.
}
\description{
The class \code{triangle} allows to determine and manipulate
triangles. \code{triangle} is a generator for an object of class
\code{triangle}.  The triangle can be defined by a combination of
side lengths and corner angles, or by the corner coordinates. A
range of class methods then allow to manipulate the resulting
triangle object.
}
\details{
Sides, angles, and coordinates must have matching orders. Note
that angles are opposite to the corresponding sides.

If corner coordinates \code{x} and \code{y} are passed, and
\code{side} and \code{angle} argument is ignored and these are
re-calculated from the coordinates.

Alternatively, \code{sides} and \code{angles} can be provided, with
unknown elements passed as \code{NA}. Any combination that defines
a triangle is valid. Specifically, these can be all three sides, a
side and two angles, two angles and a side, and three angles and a
side. Note that for a single angle that is not between the two
sides, there can also be no or two solutions.

Method to extract basic data:

\code{sides} and \code{angles} extract the sides and angles. The
angles are returned in degrees if the degrees flag was set to TRUE
during triangle construction.

\code{circumference} and \code{area} yield the corresponding quantity.

\code{as.data.frame} returns a data frame with colums with the
corner coordinates, angles, and side lengths.

Methods to extract geometric data:

\code{circumcircle} and \code{incircle} return a list with radius
and center of these circles.

Methods to manipulate triangle:

\code{grow} grows (or shrinks) a triangle by adding a margin to each side.

\code{place} rotates the triangle by \code{angle}, then shifts it
by \code{origin}.

\code{transform2D} applies a 2D affine transformation to the
triangle. The geometry (sides, angles) are adjusted accordingly.

Methods to plot the triangle:

\code{plot} plots the triangle. Circumcircle and incircle can also
be shown.
}
\examples{

## three sides
t1 <- triangle(sides=c(3,4,5))
t2 <- grow(t1, margins=c(1,0,0))
incircle(t2)
t3 <- transform2D(t2, scale2D(2)\%*\%rotate2D(30*pi/180)\%*\%translate2D(5,5))
plot(t3)

}
\author{
Pascal Niklaus \email{pascal.niklaus@ieu.uzh.ch}
}
