% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splitScreen.R
\name{splitScreen}
\alias{splitScreen}
\title{Parametric interface to split.screen}
\usage{
splitScreen(nx = 2, ny = 1, gapx = 0, gapy = 0, topy = 0,
  bottomy = 0.2, leftx = 0.2, rightx = 0, byrow = TRUE,
  debug = FALSE)
}
\arguments{
\item{nx, ny}{number of panels in horizontal and vertical direction}

\item{gapx, gapy}{gap between panels in horizontal and vertical direction}

\item{topy, bottomy, leftx, rightx}{extent of the four margins}

\item{byrow}{logical indicating whether the panels are arranged
left to right first and then top to bottom (default,
byrow=TRUE) or top to bottom first and then left to right
(byrow=FALSE)}

\item{debug}{logical. If true, `split.screen` is not called but the
matrix with the panel dimensions returned}
}
\value{
The matrix passed to `split.screen`
}
\description{
I use base graphics a lot, including `split.screen` to combined
multiple figures in a way not possible with this flexibilty with
`par(mfrow=...)`.  However, setting up the matrix for
`split.screen` is cumbersome.
}
\details{
This function provides a parametric interface to `split.screen` for
regularly spaced and sized panels. The parameters are self-explanatory.
}
\examples{
library(pascal)
splitScreen(nx=3,ny=2,topy=.2)
## a not very useful example...
for(i in 1:6) {
  screen(i)
  par(mai=c(0,0,0,0))
  plot(rnorm(10))
}
close.screen()

}
\seealso{
\code{\link{split.screen}}
}
\author{
Pascal Niklaus \email{pascal.niklaus@ieu.uzh.ch}
}
